{"mappings":"AAwDkB,IAAIA,SAAQ,CAACC,EAASC,KAEpC,MAAMC,EAASC,KAAKC,SAAW,GACjCC,YAAW,KACLH,EACFF,EAAQ,aAERC,EAAO,yBAAyB,GATtB,IAWL,IAKUK,MAErB,SAA4BC,GAC1BC,QAAQC,IAAI,sBACZD,QAAQC,IAAIF,E,IAJgCG,OAM9C,SAA0BC,GACxBH,QAAQC,IAAI,oBACZD,QAAQC,IAAIE,E,IAEdH,QAAQC,IAAI,IACZD,QAAQC,IAAI,IACZD,QAAQC,IAAI,IACZD,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// !---------------------------------------\n// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('YES');\n//     }\n//     reject('NO');\n//   }, 2000);\n// });\n\n// function onFulfilled(result) {\n//   console.log('onFulfilled -> onFulfilled');\n//   console.log(`✅ ${result}`);\n// }\n\n// function onRejected(error) {\n//   console.log('onRejected -> onRejected');\n//   console.log(`❌ ${error}`);\n// }\n\n// /**\n//  * ланцюжки промісів\n//  */\n\n// promise\n//   .then(onFulfilled, onRejected)\n//   .then(x => {\n//     console.log(x);\n\n//     return 10;\n//   })\n//   .then(y => console.log(y))\n//   .then(a => console.log(a))\n//   .catch(error => console.log(error))\n//   .finally(() => console.log('Я буду виконуватися завжди'));\n\n/*\n * Промисификация:\n * - Поблема доступа к результату промиса с колбеком\n * - Функция которая возвращает промис\n */\n\nconst makeOrder = (dish) => {\n  const DELAY = 1000;\n\n  const promise = new Promise((resolve, reject) =>\n  {\n    const passed = Math.random() > 0.5;\n  setTimeout(() => {\n    if (passed) {\n      resolve('Your food');\n    } else {\n      reject('your food is not ready');\n    }\n  }, DELAY);\n  })\n  return promise\n};\n\nmakeOrder('пиріжок').then(onMakeOrderSuccess).catch(onMakeOrderError) ;\n\nfunction onMakeOrderSuccess(result) {\n  console.log('onMakeOrderSuccess');\n  console.log(result);\n}\nfunction onMakeOrderError(error) {\n  console.log('onMakeOrderError');\n  console.log(error);\n}\nconsole.log(10);\nconsole.log(20);\nconsole.log(30);\nconsole.log(40);"],"names":["Promise","resolve","reject","passed","Math","random","setTimeout","then","result","console","log","catch","error"],"version":3,"file":"03-promises.59a44a23.js.map"}