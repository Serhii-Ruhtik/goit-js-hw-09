{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAWC,SAASC,cAAc,SAOxC,SAASC,EAAcC,EAAUC,GAEjC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZLL,EAASa,iBAAiB,UAiB1B,SAAkCC,GAChCA,EAAOC,iBAKP,IAHA,IAAgCC,EAAAF,EAAOG,cAAcC,SAA7CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAMC,OAAOJ,EAAMK,OAEdC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAI,EAEzCtB,EAAcsB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBP,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OAC3D0B,QAAMC,IAAI,uBAAwCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D4B,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBP,EAAA8B,OAAOM,QAAQ,sBAAuCJ,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OAC1D0B,QAAMC,IAAI,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEzDiB,GAAOC,OAAOH,EAAKI,OAEnBxB,EAASmC,O,IAEXJ,QAAQC,IAAI,IACZD,QAAQC,IAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\n\n\nconst refsForm = document.querySelector('.form');\n// console.log(refsForm);\n\n// let timerId = null; \n\nrefsForm.addEventListener('submit', submitInPromiseGenerator);\n\nfunction createPromise(position, delay) {\n \nreturn new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n});\n}  \n\n\nfunction submitInPromiseGenerator(params) {\n  params.preventDefault();\n\n  const { delay, step, amount } = params.currentTarget.elements;\n  let del = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i+= 1) {\n    \ncreatePromise(i, del)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  del += Number(step.value);\n  }\n  refsForm.reset();\n}\nconsole.log(10);\nconsole.log(10);\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refsForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","params","preventDefault","_elements","currentTarget","elements","delay1","step","amount","del","Number","value","i","then","param","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.98d9f57e.js.map"}