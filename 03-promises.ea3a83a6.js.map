{"mappings":"AAUgB,IAAIA,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAaC,KAAKC,SAAW,GAEnCC,YAAW,KACLH,GACFF,EAAQ,OAEVC,EAAO,KAAK,GACX,IAAK,IAgBPK,MAAKC,IACJC,QAAQC,IAAIF,GAEL,KAERD,MAAKI,IACJF,QAAQC,IAAIC,EAAE,IAEfJ,MAAKK,IACJH,QAAQC,IAAIE,EAAE","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// !---------------------------------------\nconst promise = new Promise((resolve, relect) => {\n  const canFulfill = Math.random() > 0.5;\n\n  setTimeout(() => {\n    if (canFulfill) {\n      resolve('YES');\n    }\n    relect('NO');\n  }, 2000);\n});\n// console.log(promise);\n// promise.then(\n//   result => {\n//     console.log(result);\n//   },\n//   error => {\n//     console.log(error);\n//   }\n// );\n\n/**\n * ланцюжки промісів\n */\npromise\n  .then(result => {\n    console.log(result);\n\n    return 5\n  })\n  .then(x => {\n    console.log(x);\n  })\n  .then(y => {\n    console.log(y);\n  });\n\n"],"names":["Promise","resolve","relect","canFulfill","Math","random","setTimeout","then","result","console","log","x","y"],"version":3,"file":"03-promises.ea3a83a6.js.map"}